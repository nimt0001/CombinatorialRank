temp = Taylor$Progression
all_clin$dfs_events = apply(as.data.frame(temp), 1, function(x) ifelse(x==0,1,0))
######### Plot the KM curve - Hieu 160505
s_temp <- Surv(as.numeric(as.character(all_clin$new_dfsMonths)),all_clin$dfs_events)
s_new <- survfit(s_temp~my_event_rna)  #temp2$temp2 event_rna[ind_gene,ind_tum]
s1_new <- tryCatch(survdiff(s_temp~my_event_rna), error = function(e) return(NA))
pv_new <- ifelse(is.na(s1_new),next,(round(1 - pchisq(s1_new$chisq, length(s1_new$n) - 1),3)))[[1]]
my_event_rna_name <- paste("") # CD36 CCDC68
plot(s_new,col=c(1:3), frame=F, mark.time=TRUE, lwd=2,main=paste("Kaplan-Meier survival analysis",my_event_rna_name,sep="\n"))
######### Cox regression - Hieu 160505
prostate <- c()
prostate$time <- as.numeric(as.character(all_clin$new_dfsMonths))
prostate$status <- all_clin$dfs_events
prostate$SurvObj <- with(prostate, Surv(time, status == 1))
prostate$rna <- my_event_rna
res.cox1 <- coxph(SurvObj ~ rna, data =  prostate) #age + rna + gleason + tstage
summary(res.cox1)
threshold = 7.29 # 6.76
my_event_rna <- apply(as.data.frame(rna1), 1, function(x) ifelse(abs(x) < threshold,1,0))  #abs(x) > 1.96 2
all_clin = c()
temp = Taylor$Prog.Time
all_clin$new_dfsMonths = apply(as.data.frame(temp), 1, function(x) ifelse(x==-1,NA,x/30))
temp = Taylor$Progression
all_clin$dfs_events = apply(as.data.frame(temp), 1, function(x) ifelse(x==0,1,0))
######### Plot the KM curve - Hieu 160505
s_temp <- Surv(as.numeric(as.character(all_clin$new_dfsMonths)),all_clin$dfs_events)
s_new <- survfit(s_temp~my_event_rna)  #temp2$temp2 event_rna[ind_gene,ind_tum]
s1_new <- tryCatch(survdiff(s_temp~my_event_rna), error = function(e) return(NA))
pv_new <- ifelse(is.na(s1_new),next,(round(1 - pchisq(s1_new$chisq, length(s1_new$n) - 1),3)))[[1]]
my_event_rna_name <- paste("") # CD36 CCDC68
plot(s_new,col=c(1:3), frame=F, mark.time=TRUE, lwd=2,main=paste("Kaplan-Meier survival analysis",my_event_rna_name,sep="\n"))
######### Cox regression - Hieu 160505
prostate <- c()
prostate$time <- as.numeric(as.character(all_clin$new_dfsMonths))
prostate$status <- all_clin$dfs_events
prostate$SurvObj <- with(prostate, Surv(time, status == 1))
prostate$rna <- my_event_rna
res.cox1 <- coxph(SurvObj ~ rna, data =  prostate) #age + rna + gleason + tstage
summary(res.cox1)
threshold = 7.295 # 6.76
my_event_rna <- apply(as.data.frame(rna1), 1, function(x) ifelse(abs(x) < threshold,1,0))  #abs(x) > 1.96 2
all_clin = c()
temp = Taylor$Prog.Time
all_clin$new_dfsMonths = apply(as.data.frame(temp), 1, function(x) ifelse(x==-1,NA,x/30))
temp = Taylor$Progression
all_clin$dfs_events = apply(as.data.frame(temp), 1, function(x) ifelse(x==0,1,0))
######### Plot the KM curve - Hieu 160505
s_temp <- Surv(as.numeric(as.character(all_clin$new_dfsMonths)),all_clin$dfs_events)
s_new <- survfit(s_temp~my_event_rna)  #temp2$temp2 event_rna[ind_gene,ind_tum]
s1_new <- tryCatch(survdiff(s_temp~my_event_rna), error = function(e) return(NA))
pv_new <- ifelse(is.na(s1_new),next,(round(1 - pchisq(s1_new$chisq, length(s1_new$n) - 1),3)))[[1]]
my_event_rna_name <- paste("") # CD36 CCDC68
plot(s_new,col=c(1:3), frame=F, mark.time=TRUE, lwd=2,main=paste("Kaplan-Meier survival analysis",my_event_rna_name,sep="\n"))
######### Cox regression - Hieu 160505
prostate <- c()
prostate$time <- as.numeric(as.character(all_clin$new_dfsMonths))
prostate$status <- all_clin$dfs_events
prostate$SurvObj <- with(prostate, Surv(time, status == 1))
prostate$rna <- my_event_rna
res.cox1 <- coxph(SurvObj ~ rna, data =  prostate) #age + rna + gleason + tstage
summary(res.cox1)
threshold = 7.305 # 6.76
my_event_rna <- apply(as.data.frame(rna1), 1, function(x) ifelse(abs(x) < threshold,1,0))  #abs(x) > 1.96 2
all_clin = c()
temp = Taylor$Prog.Time
all_clin$new_dfsMonths = apply(as.data.frame(temp), 1, function(x) ifelse(x==-1,NA,x/30))
temp = Taylor$Progression
all_clin$dfs_events = apply(as.data.frame(temp), 1, function(x) ifelse(x==0,1,0))
######### Plot the KM curve - Hieu 160505
s_temp <- Surv(as.numeric(as.character(all_clin$new_dfsMonths)),all_clin$dfs_events)
s_new <- survfit(s_temp~my_event_rna)  #temp2$temp2 event_rna[ind_gene,ind_tum]
s1_new <- tryCatch(survdiff(s_temp~my_event_rna), error = function(e) return(NA))
pv_new <- ifelse(is.na(s1_new),next,(round(1 - pchisq(s1_new$chisq, length(s1_new$n) - 1),3)))[[1]]
my_event_rna_name <- paste("") # CD36 CCDC68
plot(s_new,col=c(1:3), frame=F, mark.time=TRUE, lwd=2,main=paste("Kaplan-Meier survival analysis",my_event_rna_name,sep="\n"))
prostate <- c()
prostate$time <- as.numeric(as.character(all_clin$new_dfsMonths))
prostate$status <- all_clin$dfs_events
prostate$SurvObj <- with(prostate, Surv(time, status == 1))
prostate$rna <- my_event_rna
res.cox1 <- coxph(SurvObj ~ rna, data =  prostate) #age + rna + gleason + tstage
summary(res.cox1)
threshold = 7.3 # 6.76
my_event_rna <- apply(as.data.frame(rna1), 1, function(x) ifelse(abs(x) < threshold,1,0))  #abs(x) > 1.96 2
all_clin = c()
temp = Taylor$Prog.Time
all_clin$new_dfsMonths = apply(as.data.frame(temp), 1, function(x) ifelse(x==-1,NA,x/30))
temp = Taylor$Progression
all_clin$dfs_events = apply(as.data.frame(temp), 1, function(x) ifelse(x==0,1,0))
######### Plot the KM curve - Hieu 160505
s_temp <- Surv(as.numeric(as.character(all_clin$new_dfsMonths)),all_clin$dfs_events)
s_new <- survfit(s_temp~my_event_rna)  #temp2$temp2 event_rna[ind_gene,ind_tum]
s1_new <- tryCatch(survdiff(s_temp~my_event_rna), error = function(e) return(NA))
pv_new <- ifelse(is.na(s1_new),next,(round(1 - pchisq(s1_new$chisq, length(s1_new$n) - 1),3)))[[1]]
my_event_rna_name <- paste("") # CD36 CCDC68
plot(s_new,col=c(1:3), frame=F, mark.time=TRUE, lwd=2,main=paste("Kaplan-Meier survival analysis",my_event_rna_name,sep="\n"))
######### Cox regression - Hieu 160505
prostate <- c()
prostate$time <- as.numeric(as.character(all_clin$new_dfsMonths))
prostate$status <- all_clin$dfs_events
prostate$SurvObj <- with(prostate, Surv(time, status == 1))
prostate$rna <- my_event_rna
res.cox1 <- coxph(SurvObj ~ rna, data =  prostate) #age + rna + gleason + tstage
summary(res.cox1)
threshold = 7.31 # 6.76
my_event_rna <- apply(as.data.frame(rna1), 1, function(x) ifelse(abs(x) < threshold,1,0))  #abs(x) > 1.96 2
all_clin = c()
temp = Taylor$Prog.Time
all_clin$new_dfsMonths = apply(as.data.frame(temp), 1, function(x) ifelse(x==-1,NA,x/30))
temp = Taylor$Progression
all_clin$dfs_events = apply(as.data.frame(temp), 1, function(x) ifelse(x==0,1,0))
######### Plot the KM curve - Hieu 160505
s_temp <- Surv(as.numeric(as.character(all_clin$new_dfsMonths)),all_clin$dfs_events)
s_new <- survfit(s_temp~my_event_rna)  #temp2$temp2 event_rna[ind_gene,ind_tum]
s1_new <- tryCatch(survdiff(s_temp~my_event_rna), error = function(e) return(NA))
pv_new <- ifelse(is.na(s1_new),next,(round(1 - pchisq(s1_new$chisq, length(s1_new$n) - 1),3)))[[1]]
my_event_rna_name <- paste("") # CD36 CCDC68
plot(s_new,col=c(1:3), frame=F, mark.time=TRUE, lwd=2,main=paste("Kaplan-Meier survival analysis",my_event_rna_name,sep="\n"))
######### Cox regression - Hieu 160505
prostate <- c()
prostate$time <- as.numeric(as.character(all_clin$new_dfsMonths))
prostate$status <- all_clin$dfs_events
prostate$SurvObj <- with(prostate, Surv(time, status == 1))
prostate$rna <- my_event_rna
res.cox1 <- coxph(SurvObj ~ rna, data =  prostate) #age + rna + gleason + tstage
summary(res.cox1)
threshold = 7.302 # 6.76
my_event_rna <- apply(as.data.frame(rna1), 1, function(x) ifelse(abs(x) < threshold,1,0))  #abs(x) > 1.96 2
all_clin = c()
temp = Taylor$Prog.Time
all_clin$new_dfsMonths = apply(as.data.frame(temp), 1, function(x) ifelse(x==-1,NA,x/30))
temp = Taylor$Progression
all_clin$dfs_events = apply(as.data.frame(temp), 1, function(x) ifelse(x==0,1,0))
######### Plot the KM curve - Hieu 160505
s_temp <- Surv(as.numeric(as.character(all_clin$new_dfsMonths)),all_clin$dfs_events)
s_new <- survfit(s_temp~my_event_rna)  #temp2$temp2 event_rna[ind_gene,ind_tum]
s1_new <- tryCatch(survdiff(s_temp~my_event_rna), error = function(e) return(NA))
pv_new <- ifelse(is.na(s1_new),next,(round(1 - pchisq(s1_new$chisq, length(s1_new$n) - 1),3)))[[1]]
my_event_rna_name <- paste("") # CD36 CCDC68
plot(s_new,col=c(1:3), frame=F, mark.time=TRUE, lwd=2,main=paste("Kaplan-Meier survival analysis",my_event_rna_name,sep="\n"))
######### Cox regression - Hieu 160505
prostate <- c()
prostate$time <- as.numeric(as.character(all_clin$new_dfsMonths))
prostate$status <- all_clin$dfs_events
prostate$SurvObj <- with(prostate, Surv(time, status == 1))
prostate$rna <- my_event_rna
res.cox1 <- coxph(SurvObj ~ rna, data =  prostate) #age + rna + gleason + tstage
summary(res.cox1)
threshold = 7.299 # 6.76
my_event_rna <- apply(as.data.frame(rna1), 1, function(x) ifelse(abs(x) < threshold,1,0))  #abs(x) > 1.96 2
all_clin = c()
temp = Taylor$Prog.Time
all_clin$new_dfsMonths = apply(as.data.frame(temp), 1, function(x) ifelse(x==-1,NA,x/30))
temp = Taylor$Progression
all_clin$dfs_events = apply(as.data.frame(temp), 1, function(x) ifelse(x==0,1,0))
######### Plot the KM curve - Hieu 160505
s_temp <- Surv(as.numeric(as.character(all_clin$new_dfsMonths)),all_clin$dfs_events)
s_new <- survfit(s_temp~my_event_rna)  #temp2$temp2 event_rna[ind_gene,ind_tum]
s1_new <- tryCatch(survdiff(s_temp~my_event_rna), error = function(e) return(NA))
pv_new <- ifelse(is.na(s1_new),next,(round(1 - pchisq(s1_new$chisq, length(s1_new$n) - 1),3)))[[1]]
my_event_rna_name <- paste("") # CD36 CCDC68
plot(s_new,col=c(1:3), frame=F, mark.time=TRUE, lwd=2,main=paste("Kaplan-Meier survival analysis",my_event_rna_name,sep="\n"))
######### Cox regression - Hieu 160505
prostate <- c()
prostate$time <- as.numeric(as.character(all_clin$new_dfsMonths))
prostate$status <- all_clin$dfs_events
prostate$SurvObj <- with(prostate, Surv(time, status == 1))
prostate$rna <- my_event_rna
res.cox1 <- coxph(SurvObj ~ rna, data =  prostate) #age + rna + gleason + tstage
summary(res.cox1)
threshold = 7.297 # 6.76
my_event_rna <- apply(as.data.frame(rna1), 1, function(x) ifelse(abs(x) < threshold,1,0))  #abs(x) > 1.96 2
all_clin = c()
temp = Taylor$Prog.Time
all_clin$new_dfsMonths = apply(as.data.frame(temp), 1, function(x) ifelse(x==-1,NA,x/30))
temp = Taylor$Progression
all_clin$dfs_events = apply(as.data.frame(temp), 1, function(x) ifelse(x==0,1,0))
######### Plot the KM curve - Hieu 160505
s_temp <- Surv(as.numeric(as.character(all_clin$new_dfsMonths)),all_clin$dfs_events)
s_new <- survfit(s_temp~my_event_rna)  #temp2$temp2 event_rna[ind_gene,ind_tum]
s1_new <- tryCatch(survdiff(s_temp~my_event_rna), error = function(e) return(NA))
pv_new <- ifelse(is.na(s1_new),next,(round(1 - pchisq(s1_new$chisq, length(s1_new$n) - 1),3)))[[1]]
my_event_rna_name <- paste("") # CD36 CCDC68
plot(s_new,col=c(1:3), frame=F, mark.time=TRUE, lwd=2,main=paste("Kaplan-Meier survival analysis",my_event_rna_name,sep="\n"))
######### Cox regression - Hieu 160505
prostate <- c()
prostate$time <- as.numeric(as.character(all_clin$new_dfsMonths))
prostate$status <- all_clin$dfs_events
prostate$SurvObj <- with(prostate, Surv(time, status == 1))
prostate$rna <- my_event_rna
res.cox1 <- coxph(SurvObj ~ rna, data =  prostate) #age + rna + gleason + tstage
summary(res.cox1)
threshold = 7.294 # 6.76
my_event_rna <- apply(as.data.frame(rna1), 1, function(x) ifelse(abs(x) < threshold,1,0))  #abs(x) > 1.96 2
all_clin = c()
temp = Taylor$Prog.Time
all_clin$new_dfsMonths = apply(as.data.frame(temp), 1, function(x) ifelse(x==-1,NA,x/30))
temp = Taylor$Progression
all_clin$dfs_events = apply(as.data.frame(temp), 1, function(x) ifelse(x==0,1,0))
######### Plot the KM curve - Hieu 160505
s_temp <- Surv(as.numeric(as.character(all_clin$new_dfsMonths)),all_clin$dfs_events)
s_new <- survfit(s_temp~my_event_rna)  #temp2$temp2 event_rna[ind_gene,ind_tum]
s1_new <- tryCatch(survdiff(s_temp~my_event_rna), error = function(e) return(NA))
pv_new <- ifelse(is.na(s1_new),next,(round(1 - pchisq(s1_new$chisq, length(s1_new$n) - 1),3)))[[1]]
my_event_rna_name <- paste("") # CD36 CCDC68
plot(s_new,col=c(1:3), frame=F, mark.time=TRUE, lwd=2,main=paste("Kaplan-Meier survival analysis",my_event_rna_name,sep="\n"))
######### Cox regression - Hieu 160505
prostate <- c()
prostate$time <- as.numeric(as.character(all_clin$new_dfsMonths))
prostate$status <- all_clin$dfs_events
prostate$SurvObj <- with(prostate, Surv(time, status == 1))
prostate$rna <- my_event_rna
res.cox1 <- coxph(SurvObj ~ rna, data =  prostate) #age + rna + gleason + tstage
summary(res.cox1)
threshold = 7.295 # 6.76
my_event_rna <- apply(as.data.frame(rna1), 1, function(x) ifelse(abs(x) < threshold,1,0))  #abs(x) > 1.96 2
all_clin = c()
temp = Taylor$Prog.Time
all_clin$new_dfsMonths = apply(as.data.frame(temp), 1, function(x) ifelse(x==-1,NA,x/30))
temp = Taylor$Progression
all_clin$dfs_events = apply(as.data.frame(temp), 1, function(x) ifelse(x==0,1,0))
######### Plot the KM curve - Hieu 160505
s_temp <- Surv(as.numeric(as.character(all_clin$new_dfsMonths)),all_clin$dfs_events)
s_new <- survfit(s_temp~my_event_rna)  #temp2$temp2 event_rna[ind_gene,ind_tum]
s1_new <- tryCatch(survdiff(s_temp~my_event_rna), error = function(e) return(NA))
pv_new <- ifelse(is.na(s1_new),next,(round(1 - pchisq(s1_new$chisq, length(s1_new$n) - 1),3)))[[1]]
my_event_rna_name <- paste("") # CD36 CCDC68
plot(s_new,col=c(1:3), frame=F, mark.time=TRUE, lwd=2,main=paste("Kaplan-Meier survival analysis",my_event_rna_name,sep="\n"))
######### Cox regression - Hieu 160505
prostate <- c()
prostate$time <- as.numeric(as.character(all_clin$new_dfsMonths))
prostate$status <- all_clin$dfs_events
prostate$SurvObj <- with(prostate, Surv(time, status == 1))
prostate$rna <- my_event_rna
res.cox1 <- coxph(SurvObj ~ rna, data =  prostate) #age + rna + gleason + tstage
summary(res.cox1)
threshold = 7.3 # 6.76 7.295
my_event_rna <- apply(as.data.frame(rna1), 1, function(x) ifelse(abs(x) < threshold,1,0))  #abs(x) > 1.96 2
all_clin = c()
temp = Taylor$Prog.Time
all_clin$new_dfsMonths = apply(as.data.frame(temp), 1, function(x) ifelse(x==-1,NA,x/30))
temp = Taylor$Progression
all_clin$dfs_events = apply(as.data.frame(temp), 1, function(x) ifelse(x==0,1,0))
######### Plot the KM curve - Hieu 160505
s_temp <- Surv(as.numeric(as.character(all_clin$new_dfsMonths)),all_clin$dfs_events)
s_new <- survfit(s_temp~my_event_rna)  #temp2$temp2 event_rna[ind_gene,ind_tum]
s1_new <- tryCatch(survdiff(s_temp~my_event_rna), error = function(e) return(NA))
pv_new <- ifelse(is.na(s1_new),next,(round(1 - pchisq(s1_new$chisq, length(s1_new$n) - 1),3)))[[1]]
my_event_rna_name <- paste("") # CD36 CCDC68
plot(s_new,col=c(1:3), frame=F, mark.time=TRUE, lwd=2,main=paste("Kaplan-Meier survival analysis",my_event_rna_name,sep="\n"))
######### Cox regression - Hieu 160505
prostate <- c()
prostate$time <- as.numeric(as.character(all_clin$new_dfsMonths))
prostate$status <- all_clin$dfs_events
prostate$SurvObj <- with(prostate, Surv(time, status == 1))
prostate$rna <- my_event_rna
res.cox1 <- coxph(SurvObj ~ rna, data =  prostate) #age + rna + gleason + tstage
summary(res.cox1)
rm(list=ls(all=TRUE))
Taylor = read.table("Taylor2010_KM_removed_ADT.txt",sep="\t",header=1) #Taylor2010_KM.txt Taylor2010_KM_removed.txt Taylor2010_KM_before.txt
rna1 <- log2(Taylor$RARRES3) #CRABP2 RARRES3
hist(rna1,breaks=seq(min(rna1,0),max(rna1,7),(max(rna1,7)-min(rna1,0))/90),xlim=c(min(rna1,0),max(rna1,8)))
#hist(rna1,breaks=seq(6.5,8,0.069))
# Trimodality test - Just for curiosity
library(mixtools)
hist(rna1,breaks=seq(min(rna1,0),max(rna1,7),(max(rna1,7)-min(rna1,0))/60),xlim=c(min(rna1,0),max(rna1,8)))
mixmdl = normalmixEM(rna1,lambda = c(1,1,1), mu = c(4.8, 5.2, 6.6), k=3) #mu = c(4.8, 5.2, 6.6), k=3
plot(mixmdl,which=2)
lines(density(rna1), lty=2, lwd=2)
plot.EM
# Apply threshold and separate into two populations
threshold = 7.3 # 6.76 7.295
my_event_rna <- apply(as.data.frame(rna1), 1, function(x) ifelse(abs(x) < threshold,1,0))  #abs(x) > 1.96 2
all_clin = c()
temp = Taylor$Prog.Time
all_clin$new_dfsMonths = apply(as.data.frame(temp), 1, function(x) ifelse(x==-1,NA,x/30))
temp = Taylor$Progression
all_clin$dfs_events = apply(as.data.frame(temp), 1, function(x) ifelse(x==0,1,0))
######### Plot the KM curve - Hieu 160505
s_temp <- Surv(as.numeric(as.character(all_clin$new_dfsMonths)),all_clin$dfs_events)
s_new <- survfit(s_temp~my_event_rna)  #temp2$temp2 event_rna[ind_gene,ind_tum]
s1_new <- tryCatch(survdiff(s_temp~my_event_rna), error = function(e) return(NA))
pv_new <- ifelse(is.na(s1_new),next,(round(1 - pchisq(s1_new$chisq, length(s1_new$n) - 1),3)))[[1]]
my_event_rna_name <- paste("") # CD36 CCDC68
plot(s_new,col=c(1:3), frame=F, mark.time=TRUE, lwd=2,main=paste("Kaplan-Meier survival analysis",my_event_rna_name,sep="\n"))
rm(list=ls(all=TRUE))
Taylor = read.table("Taylor2010_KM_removed_ADT.txt",sep="\t",header=1) #Taylor2010_KM.txt Taylor2010_KM_removed.txt Taylor2010_KM_before.txt
rna1 <- log2(Taylor$RARRES3) #CRABP2 RARRES3
hist(rna1,breaks=seq(min(rna1,0),max(rna1,7),(max(rna1,7)-min(rna1,0))/90),xlim=c(min(rna1,0),max(rna1,8)))
#hist(rna1,breaks=seq(6.5,8,0.069))
threshold = 7.3 # 6.76 7.295
my_event_rna <- apply(as.data.frame(rna1), 1, function(x) ifelse(abs(x) < threshold,1,0))  #abs(x) > 1.96 2
all_clin = c()
temp = Taylor$Prog.Time
all_clin$new_dfsMonths = apply(as.data.frame(temp), 1, function(x) ifelse(x==-1,NA,x/30))
temp = Taylor$Progression
all_clin$dfs_events = apply(as.data.frame(temp), 1, function(x) ifelse(x==0,1,0))
s_temp <- Surv(as.numeric(as.character(all_clin$new_dfsMonths)),all_clin$dfs_events)
s_new <- survfit(s_temp~my_event_rna)  #temp2$temp2 event_rna[ind_gene,ind_tum]
s1_new <- tryCatch(survdiff(s_temp~my_event_rna), error = function(e) return(NA))
pv_new <- ifelse(is.na(s1_new),next,(round(1 - pchisq(s1_new$chisq, length(s1_new$n) - 1),3)))[[1]]
my_event_rna_name <- paste("") # CD36 CCDC68
plot(s_new,col=c(1:3), frame=F, mark.time=TRUE, lwd=2,main=paste("Kaplan-Meier survival analysis",my_event_rna_name,sep="\n"))
library(survival)
s_temp <- Surv(as.numeric(as.character(all_clin$new_dfsMonths)),all_clin$dfs_events)
s_new <- survfit(s_temp~my_event_rna)  #temp2$temp2 event_rna[ind_gene,ind_tum]
s1_new <- tryCatch(survdiff(s_temp~my_event_rna), error = function(e) return(NA))
pv_new <- ifelse(is.na(s1_new),next,(round(1 - pchisq(s1_new$chisq, length(s1_new$n) - 1),3)))[[1]]
my_event_rna_name <- paste("") # CD36 CCDC68
plot(s_new,col=c(1:3), frame=F, mark.time=TRUE, lwd=2,main=paste("Kaplan-Meier survival analysis",my_event_rna_name,sep="\n"))
library(gplots)
rm(list=ls(all=TRUE))
counts <- read.table(file="counts_Voom_ave_swap_removed.txt",header=TRUE)  #counts_Voom_ave
genelist <- read.table(file="genelist_top200.txt")
#genelist_cellcyle.txt genelist_top200.txt genelist_Ashlee_RA genelist_Renea_metab_selected genelist_Renea_metab genelist_Taylor2010_in_Brocks_paper genelist_Taylor2010 genelist_Brocks_paper genelist_Brocks_top100.txt genelist_top200.txt genelist_French.txt genelist_PID.txt genelist_Mitch.txt genelist_Pomerantz.txt genelist_AR_TCGA.txt genelist_AR_Asangani.txt genelist_Dormancy_Kim.txt genelist_Kwon.txt genelist_SLC.txt genelist_BRCA2_Renea.txt genelist_DNA_Damage_Mahesh.txt genelist_top100_up.txt genelist_top100_down.txt
genelist <- as.matrix(genelist)
index <- rownames(counts)  %in% genelist[,1]
index <- which(index)
values <- as.matrix(counts[index,])
rownames(values) <- rownames(counts)[index]
#write.table(values, file="heatmap_genelist_top200.txt", row.names=T, sep="\t")
#heatmap_genelist_Mitch.txt heatmap_genelist_French.txt heatmap_genelist_Pomerantz.txt heatmap_genelist_AR_TCGA.txt heatmap_genelist_AR_Asangani.txt heatmap_genelist_Dormancy_Kim.txt heatmap_genelist_Kwon.txt heatmap_genelist_SLC.txt heatmap_genelist_BRCA2_Renea.txt heatmap_genelist_DNA_Damage_Mahesh.txt heatmap_genelist_top100_up.txt heatmap_genelist_top100_down.txt
myPlot <- heatmap.2(values, trace="none", dendrogram="none", Colv=FALSE, Rowv=FALSE, cexRow=0.8, cexCol=0.8, offsetRow=-0.5, offsetCol=-0.5,
col = colorRampPalette(c("blue","white","red"))(100)) #cexRow=0.5, cexCol=0.2
library(gplots)
rm(list=ls(all=TRUE))
counts <- read.table(file="counts_Voom_ave_swap_removed.txt",header=TRUE)  #counts_Voom_ave
genelist <- read.table(file="genelist_Ashlee_RA_selected.txt")
#genelist_cellcyle.txt genelist_top200.txt genelist_Ashlee_RA genelist_Renea_metab_selected genelist_Renea_metab genelist_Taylor2010_in_Brocks_paper genelist_Taylor2010 genelist_Brocks_paper genelist_Brocks_top100.txt genelist_top200.txt genelist_French.txt genelist_PID.txt genelist_Mitch.txt genelist_Pomerantz.txt genelist_AR_TCGA.txt genelist_AR_Asangani.txt genelist_Dormancy_Kim.txt genelist_Kwon.txt genelist_SLC.txt genelist_BRCA2_Renea.txt genelist_DNA_Damage_Mahesh.txt genelist_top100_up.txt genelist_top100_down.txt
genelist <- as.matrix(genelist)
index <- rownames(counts)  %in% genelist[,1]
index <- which(index)
values <- as.matrix(counts[index,])
rownames(values) <- rownames(counts)[index]
#write.table(values, file="heatmap_genelist_top200.txt", row.names=T, sep="\t")
#heatmap_genelist_Mitch.txt heatmap_genelist_French.txt heatmap_genelist_Pomerantz.txt heatmap_genelist_AR_TCGA.txt heatmap_genelist_AR_Asangani.txt heatmap_genelist_Dormancy_Kim.txt heatmap_genelist_Kwon.txt heatmap_genelist_SLC.txt heatmap_genelist_BRCA2_Renea.txt heatmap_genelist_DNA_Damage_Mahesh.txt heatmap_genelist_top100_up.txt heatmap_genelist_top100_down.txt
myPlot <- heatmap.2(values, trace="none", dendrogram="none", Colv=FALSE, Rowv=FALSE, cexRow=0.8, cexCol=0.8, offsetRow=-0.5, offsetCol=-0.5,
col = colorRampPalette(c("blue","white","red"))(100)) #cexRow=0.5, cexCol=0.2
dim(values)
rownames(values)[3]
colnames(values)[3]
colnames(values)[3] <- NULL
#write.table(values, file="heatmap_genelist_top200.txt", row.names=T, sep="\t")
#heatmap_genelist_Mitch.txt heatmap_genelist_French.txt heatmap_genelist_Pomerantz.txt heatmap_genelist_AR_TCGA.txt heatmap_genelist_AR_Asangani.txt heatmap_genelist_Dormancy_Kim.txt heatmap_genelist_Kwon.txt heatmap_genelist_SLC.txt heatmap_genelist_BRCA2_Renea.txt heatmap_genelist_DNA_Damage_Mahesh.txt heatmap_genelist_top100_up.txt heatmap_genelist_top100_down.txt
myPlot <- heatmap.2(values, trace="none", dendrogram="none", Colv=FALSE, Rowv=FALSE, cexRow=0.8, cexCol=0.8, offsetRow=-0.5, offsetCol=-0.5,
col = colorRampPalette(c("blue","white","red"))(100)) #cexRow=0.5, cexCol=0.2
colnames(values)[3] <- ""
#write.table(values, file="heatmap_genelist_top200.txt", row.names=T, sep="\t")
#heatmap_genelist_Mitch.txt heatmap_genelist_French.txt heatmap_genelist_Pomerantz.txt heatmap_genelist_AR_TCGA.txt heatmap_genelist_AR_Asangani.txt heatmap_genelist_Dormancy_Kim.txt heatmap_genelist_Kwon.txt heatmap_genelist_SLC.txt heatmap_genelist_BRCA2_Renea.txt heatmap_genelist_DNA_Damage_Mahesh.txt heatmap_genelist_top100_up.txt heatmap_genelist_top100_down.txt
myPlot <- heatmap.2(values, trace="none", dendrogram="none", Colv=FALSE, Rowv=FALSE, cexRow=0.8, cexCol=0.8, offsetRow=-0.5, offsetCol=-0.5,
col = colorRampPalette(c("blue","white","red"))(100)) #cexRow=0.5, cexCol=0.2
colnames(values)[60]
colnames(values)[59]
colnames(values)[2]
colnames(values)[1] <- "BULK IL"
colnames(values)[2] <- "BULK CL"
colnames(values)[3] <- ""
colnames(values)[59] <- ""
myPlot <- heatmap.2(values, trace="none", dendrogram="none", Colv=FALSE, Rowv=FALSE, cexRow=0.8, cexCol=0.8, offsetRow=-0.5, offsetCol=-0.5,
col = colorRampPalette(c("blue","white","red"))(100)) #cexRow=0.5, cexCol=0.2
genelist <- read.table(file="genelist_Dormancy_Kim.txt")
#genelist_Ashlee_RA_selected.txt genelist_cellcyle.txt genelist_top200.txt genelist_Ashlee_RA genelist_Renea_metab_selected genelist_Renea_metab genelist_Taylor2010_in_Brocks_paper genelist_Taylor2010 genelist_Brocks_paper genelist_Brocks_top100.txt genelist_top200.txt genelist_French.txt genelist_PID.txt genelist_Mitch.txt genelist_Pomerantz.txt genelist_AR_TCGA.txt genelist_AR_Asangani.txt genelist_Dormancy_Kim.txt genelist_Kwon.txt genelist_SLC.txt genelist_BRCA2_Renea.txt genelist_DNA_Damage_Mahesh.txt genelist_top100_up.txt genelist_top100_down.txt
genelist <- as.matrix(genelist)
index <- rownames(counts)  %in% genelist[,1]
index <- which(index)
values <- as.matrix(counts[index,])
rownames(values) <- rownames(counts)[index]
colnames(values)[1] <- "BULK IL"
colnames(values)[2] <- "BULK CL"
colnames(values)[3] <- ""
colnames(values)[59] <- ""
#write.table(values, file="heatmap_genelist_top200.txt", row.names=T, sep="\t")
#heatmap_genelist_Mitch.txt heatmap_genelist_French.txt heatmap_genelist_Pomerantz.txt heatmap_genelist_AR_TCGA.txt heatmap_genelist_AR_Asangani.txt heatmap_genelist_Dormancy_Kim.txt heatmap_genelist_Kwon.txt heatmap_genelist_SLC.txt heatmap_genelist_BRCA2_Renea.txt heatmap_genelist_DNA_Damage_Mahesh.txt heatmap_genelist_top100_up.txt heatmap_genelist_top100_down.txt
myPlot <- heatmap.2(values, trace="none", dendrogram="none", Colv=FALSE, Rowv=FALSE, cexRow=0.8, cexCol=0.8, offsetRow=-0.5, offsetCol=-0.5,
col = colorRampPalette(c("blue","white","red"))(100)) #cexRow=0.5, cexCol=0.2
genelist <- read.table(file="genelist_Dormancy_Kim_selected.txt")
#genelist_Ashlee_RA_selected.txt genelist_cellcyle.txt genelist_top200.txt genelist_Ashlee_RA genelist_Renea_metab_selected genelist_Renea_metab genelist_Taylor2010_in_Brocks_paper genelist_Taylor2010 genelist_Brocks_paper genelist_Brocks_top100.txt genelist_top200.txt genelist_French.txt genelist_PID.txt genelist_Mitch.txt genelist_Pomerantz.txt genelist_AR_TCGA.txt genelist_AR_Asangani.txt genelist_Dormancy_Kim.txt genelist_Kwon.txt genelist_SLC.txt genelist_BRCA2_Renea.txt genelist_DNA_Damage_Mahesh.txt genelist_top100_up.txt genelist_top100_down.txt
genelist <- as.matrix(genelist)
index <- rownames(counts)  %in% genelist[,1]
index <- which(index)
values <- as.matrix(counts[index,])
rownames(values) <- rownames(counts)[index]
colnames(values)[1] <- "BULK IL"
colnames(values)[2] <- "BULK CL"
colnames(values)[3] <- ""
colnames(values)[59] <- ""
#write.table(values, file="heatmap_genelist_top200.txt", row.names=T, sep="\t")
#heatmap_genelist_Mitch.txt heatmap_genelist_French.txt heatmap_genelist_Pomerantz.txt heatmap_genelist_AR_TCGA.txt heatmap_genelist_AR_Asangani.txt heatmap_genelist_Dormancy_Kim.txt heatmap_genelist_Kwon.txt heatmap_genelist_SLC.txt heatmap_genelist_BRCA2_Renea.txt heatmap_genelist_DNA_Damage_Mahesh.txt heatmap_genelist_top100_up.txt heatmap_genelist_top100_down.txt
myPlot <- heatmap.2(values, trace="none", dendrogram="none", Colv=FALSE, Rowv=FALSE, cexRow=0.8, cexCol=0.8, offsetRow=-0.5, offsetCol=-0.5,
col = colorRampPalette(c("blue","white","red"))(100)) #cexRow=0.5, cexCol=0.2
genelist <- read.table(file="genelist_Dormancy_Kim_selected.txt")
#genelist_Ashlee_RA_selected.txt genelist_cellcyle.txt genelist_top200.txt genelist_Ashlee_RA genelist_Renea_metab_selected genelist_Renea_metab genelist_Taylor2010_in_Brocks_paper genelist_Taylor2010 genelist_Brocks_paper genelist_Brocks_top100.txt genelist_top200.txt genelist_French.txt genelist_PID.txt genelist_Mitch.txt genelist_Pomerantz.txt genelist_AR_TCGA.txt genelist_AR_Asangani.txt genelist_Dormancy_Kim.txt genelist_Kwon.txt genelist_SLC.txt genelist_BRCA2_Renea.txt genelist_DNA_Damage_Mahesh.txt genelist_top100_up.txt genelist_top100_down.txt
genelist <- as.matrix(genelist)
index <- rownames(counts)  %in% genelist[,1]
index <- which(index)
values <- as.matrix(counts[index,])
rownames(values) <- rownames(counts)[index]
colnames(values)[1] <- "BULK IL"
colnames(values)[2] <- "BULK CL"
colnames(values)[3] <- ""
colnames(values)[59] <- ""
#write.table(values, file="heatmap_genelist_top200.txt", row.names=T, sep="\t")
#heatmap_genelist_Mitch.txt heatmap_genelist_French.txt heatmap_genelist_Pomerantz.txt heatmap_genelist_AR_TCGA.txt heatmap_genelist_AR_Asangani.txt heatmap_genelist_Dormancy_Kim.txt heatmap_genelist_Kwon.txt heatmap_genelist_SLC.txt heatmap_genelist_BRCA2_Renea.txt heatmap_genelist_DNA_Damage_Mahesh.txt heatmap_genelist_top100_up.txt heatmap_genelist_top100_down.txt
myPlot <- heatmap.2(values, trace="none", dendrogram="none", Colv=FALSE, Rowv=FALSE, cexRow=0.8, cexCol=0.8, offsetRow=-0.5, offsetCol=-0.5,
col = colorRampPalette(c("blue","white","red"))(100)) #cexRow=0.5, cexCol=0.2
counts <- read.table(file="counts_Voom_ave_swap_removed.txt",header=TRUE)  #counts_Voom_ave
genelist <- read.table(file="genelist_AR_TCGA_selected.txt")
#genelist_Dormancy_Kim_selected.txt genelist_Ashlee_RA_selected.txt genelist_cellcyle.txt genelist_top200.txt genelist_Ashlee_RA genelist_Renea_metab_selected genelist_Renea_metab genelist_Taylor2010_in_Brocks_paper genelist_Taylor2010 genelist_Brocks_paper genelist_Brocks_top100.txt genelist_top200.txt genelist_French.txt genelist_PID.txt genelist_Mitch.txt genelist_Pomerantz.txt genelist_AR_TCGA.txt genelist_AR_Asangani.txt genelist_Dormancy_Kim.txt genelist_Kwon.txt genelist_SLC.txt genelist_BRCA2_Renea.txt genelist_DNA_Damage_Mahesh.txt genelist_top100_up.txt genelist_top100_down.txt
genelist <- as.matrix(genelist)
index <- rownames(counts)  %in% genelist[,1]
index <- which(index)
values <- as.matrix(counts[index,])
rownames(values) <- rownames(counts)[index]
colnames(values)[1] <- "BULK IL"
colnames(values)[2] <- "BULK CL"
colnames(values)[3] <- ""
colnames(values)[59] <- ""
#write.table(values, file="heatmap_genelist_top200.txt", row.names=T, sep="\t")
#heatmap_genelist_Mitch.txt heatmap_genelist_French.txt heatmap_genelist_Pomerantz.txt heatmap_genelist_AR_TCGA.txt heatmap_genelist_AR_Asangani.txt heatmap_genelist_Dormancy_Kim.txt heatmap_genelist_Kwon.txt heatmap_genelist_SLC.txt heatmap_genelist_BRCA2_Renea.txt heatmap_genelist_DNA_Damage_Mahesh.txt heatmap_genelist_top100_up.txt heatmap_genelist_top100_down.txt
myPlot <- heatmap.2(values, trace="none", dendrogram="none", Colv=FALSE, Rowv=FALSE, cexRow=0.8, cexCol=0.8, offsetRow=-0.5, offsetCol=-0.5,
col = colorRampPalette(c("blue","white","red"))(100)) #cexRow=0.5, cexCol=0.2
genelist <- read.table(file="genelist_Renea_metab_selected.txt")
#genelist_AR_TCGA_selected.txt genelist_Dormancy_Kim_selected.txt genelist_Ashlee_RA_selected.txt genelist_cellcyle.txt genelist_top200.txt genelist_Ashlee_RA genelist_Renea_metab_selected genelist_Renea_metab genelist_Taylor2010_in_Brocks_paper genelist_Taylor2010 genelist_Brocks_paper genelist_Brocks_top100.txt genelist_top200.txt genelist_French.txt genelist_PID.txt genelist_Mitch.txt genelist_Pomerantz.txt genelist_AR_TCGA.txt genelist_AR_Asangani.txt genelist_Dormancy_Kim.txt genelist_Kwon.txt genelist_SLC.txt genelist_BRCA2_Renea.txt genelist_DNA_Damage_Mahesh.txt genelist_top100_up.txt genelist_top100_down.txt
genelist <- as.matrix(genelist)
index <- rownames(counts)  %in% genelist[,1]
index <- which(index)
values <- as.matrix(counts[index,])
rownames(values) <- rownames(counts)[index]
colnames(values)[1] <- "BULK IL"
colnames(values)[2] <- "BULK CL"
colnames(values)[3] <- ""
colnames(values)[59] <- ""
#write.table(values, file="heatmap_genelist_top200.txt", row.names=T, sep="\t")
#heatmap_genelist_Mitch.txt heatmap_genelist_French.txt heatmap_genelist_Pomerantz.txt heatmap_genelist_AR_TCGA.txt heatmap_genelist_AR_Asangani.txt heatmap_genelist_Dormancy_Kim.txt heatmap_genelist_Kwon.txt heatmap_genelist_SLC.txt heatmap_genelist_BRCA2_Renea.txt heatmap_genelist_DNA_Damage_Mahesh.txt heatmap_genelist_top100_up.txt heatmap_genelist_top100_down.txt
myPlot <- heatmap.2(values, trace="none", dendrogram="none", Colv=FALSE, Rowv=FALSE, cexRow=0.8, cexCol=0.8, offsetRow=-0.5, offsetCol=-0.5,
col = colorRampPalette(c("blue","white","red"))(100)) #cexRow=0.5, cexCol=0.2
library(survival)
library(MASS)
library(cgdsr)
library(HapEstXXR)
rm(list=ls(all=TRUE))
mycgds = CGDS("http://www.cbioportal.org/public-portal/")
library(survival)
library(MASS)
library(cgdsr)
library(HapEstXXR)
rm(list=ls(all=TRUE))
mycgds = CGDS("http://www.cbioportal.org/public-portal/")
mycancerstudy = getCancerStudies(mycgds)[117,1] #116=Cell 2015, 117=prad_tcga - note the index may change over time - Hieu
mycancerstudy
mycaselist = getCaseLists(mycgds,mycancerstudy)[2,1]  #prad_tcga_all [1,1] prat_tcga_complete
mycaselist
mygeneticprofile = getGeneticProfiles(mycgds,mycancerstudy) #All
mygeneticprofile
mygeneticprofile_cnv = mygeneticprofile[6,1] #Copy number variation
mygeneticprofile_exp = getGeneticProfiles(mycgds,mycancerstudy)[4,1]  #RNA-seq, may change
mygeneticprofile_exp_z = getGeneticProfiles(mycgds,mycancerstudy)[3,1]  #RNA-seq z score, may change
mygeneticprofile_mut = getGeneticProfiles(mycgds,mycancerstudy)[6,1]  #Mutation data from whole exome sequencing
mygeneticprofile_cnv = mygeneticprofile[5,1] #Copy number variation
mygeneticprofile_exp = getGeneticProfiles(mycgds,mycancerstudy)[4,1]  #RNA-seq, may change
mygeneticprofile_exp_z = getGeneticProfiles(mycgds,mycancerstudy)[3,1]  #RNA-seq z score, may change
library(mammaPrintData)
source("http://bioconductor.org/biocLite.R")
biocLite("mammaPrintData")
library(mammaPrintData)
buyseRGcy5
data(glasRG)
data(buyseRG)
options(width=75)
options(continue=" ")
rm(list=ls())
myDate <- format(Sys.Date(), "%b %d, %Y")
installedPckgs <- installed.packages()[,"Package"]
pckgListBIOC <- c("Biobase", "limma", "gdata")
source("http://bioconductor.org/biocLite.R")
###Load the packages, install them from Bioconductor if needed
for (pckg in pckgListBIOC) {
if (! pckg %in% installedPckgs) biocLite(pckg)
require(pckg, character.only=TRUE)
}
require(gdata)
myFile <- system.file("extdata/seventyGene", "415530a-s9.xls",
package = "mammaPrintData")
gns231 <- read.xls(myFile, skip=0, header=TRUE, stringsAsFactors=FALSE)
colnames(gns231) <- gsub("\\.\\.", "", colnames(gns231))
###Remove GO annotation
gns231 <- gns231[, -grep("sp_xref_keyword_list", colnames(gns231))]
###Check the structure of the data.frame
str(gns231)
gns231 <- gns231[order(abs(gns231$correlation), decreasing=TRUE),]
###Select the feature identifiers corresponding to the top 70 genes
gns70 <- gns231[1:70,]
gns70
write.table(gns231,file="MammaPrint_gns231.txt", sep="\t", quote=FALSE,)
write.table(gns70,file="MammaPrint_gns70.txt", sep="\t", quote=FALSE,)
progSig <- list(gns231acc = unique(gns231$accession), gns231name = unique(gns231$gene.name),
gns231any = unique(c(gns231$accession, gns231$gene.name)),
gns70acc = unique(gns70$accession), gns70name = unique(gns70$gene.name),
gns70any = unique(c(gns70$accession, gns70$gene.name)) )
progSig
progSig <- lapply(progSig, function(x) x[x!=""])
progSig
gns231Cors <- data.frame(stringsAsFactors=FALSE,
ID=c(gns231$gene.name[ gns231$gene.name %in% progSig$gns231any ],
gns231$accession),
gns231Cors=c(gns231$correlation[ gns231$gene.name %in% progSig$gns231any ],
gns231$correlation) )
####Keep unique only
progSig$gns231Cors <- gns231Cors[!duplicated(gns231Cors$ID), ]
progSig$gns231Cors <- gns231Cors[gns231Cors$ID != "", ]
###Check the structure of the list just created
str(progSig)
